{"version":3,"file":"js/74.0cd23565.js","mappings":"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","sources":["webpack://is-it-my-birthday/./node_modules/@ionic/core/components/index9.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { d as doc } from './index5.js';\r\nimport { u as now, v as pointerCoord } from './helpers.js';\r\n\r\nconst startTapClick = (config) => {\r\n    if (doc === undefined) {\r\n        return;\r\n    }\r\n    let lastTouch = -MOUSE_WAIT * 10;\r\n    let lastActivated = 0;\r\n    let activatableEle;\r\n    let activeRipple;\r\n    let activeDefer;\r\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\r\n    const clearDefers = new WeakMap();\r\n    // Touch Events\r\n    const onTouchStart = (ev) => {\r\n        lastTouch = now(ev);\r\n        pointerDown(ev);\r\n    };\r\n    const onTouchEnd = (ev) => {\r\n        lastTouch = now(ev);\r\n        pointerUp(ev);\r\n    };\r\n    const onMouseDown = (ev) => {\r\n        // Ignore right clicks\r\n        if (ev.button === 2) {\r\n            return;\r\n        }\r\n        const t = now(ev) - MOUSE_WAIT;\r\n        if (lastTouch < t) {\r\n            pointerDown(ev);\r\n        }\r\n    };\r\n    const onMouseUp = (ev) => {\r\n        const t = now(ev) - MOUSE_WAIT;\r\n        if (lastTouch < t) {\r\n            pointerUp(ev);\r\n        }\r\n    };\r\n    const cancelActive = () => {\r\n        if (activeDefer)\r\n            clearTimeout(activeDefer);\r\n        activeDefer = undefined;\r\n        if (activatableEle) {\r\n            removeActivated(false);\r\n            activatableEle = undefined;\r\n        }\r\n    };\r\n    const pointerDown = (ev) => {\r\n        if (activatableEle) {\r\n            return;\r\n        }\r\n        setActivatedElement(getActivatableTarget(ev), ev);\r\n    };\r\n    const pointerUp = (ev) => {\r\n        setActivatedElement(undefined, ev);\r\n    };\r\n    const setActivatedElement = (el, ev) => {\r\n        // do nothing\r\n        if (el && el === activatableEle) {\r\n            return;\r\n        }\r\n        if (activeDefer)\r\n            clearTimeout(activeDefer);\r\n        activeDefer = undefined;\r\n        const { x, y } = pointerCoord(ev);\r\n        // deactivate selected\r\n        if (activatableEle) {\r\n            if (clearDefers.has(activatableEle)) {\r\n                throw new Error('internal error');\r\n            }\r\n            if (!activatableEle.classList.contains(ACTIVATED)) {\r\n                addActivated(activatableEle, x, y);\r\n            }\r\n            removeActivated(true);\r\n        }\r\n        // activate\r\n        if (el) {\r\n            const deferId = clearDefers.get(el);\r\n            if (deferId) {\r\n                clearTimeout(deferId);\r\n                clearDefers.delete(el);\r\n            }\r\n            el.classList.remove(ACTIVATED);\r\n            const callback = () => {\r\n                addActivated(el, x, y);\r\n                activeDefer = undefined;\r\n            };\r\n            if (isInstant(el)) {\r\n                callback();\r\n            }\r\n            else {\r\n                activeDefer = setTimeout(callback, ADD_ACTIVATED_DEFERS);\r\n            }\r\n        }\r\n        activatableEle = el;\r\n    };\r\n    const addActivated = (el, x, y) => {\r\n        lastActivated = Date.now();\r\n        el.classList.add(ACTIVATED);\r\n        if (!useRippleEffect)\r\n            return;\r\n        const rippleEffect = getRippleEffect(el);\r\n        if (rippleEffect !== null) {\r\n            removeRipple();\r\n            activeRipple = rippleEffect.addRipple(x, y);\r\n        }\r\n    };\r\n    const removeRipple = () => {\r\n        if (activeRipple !== undefined) {\r\n            activeRipple.then((remove) => remove());\r\n            activeRipple = undefined;\r\n        }\r\n    };\r\n    const removeActivated = (smooth) => {\r\n        removeRipple();\r\n        const active = activatableEle;\r\n        if (!active) {\r\n            return;\r\n        }\r\n        const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\r\n        if (smooth && time > 0 && !isInstant(active)) {\r\n            const deferId = setTimeout(() => {\r\n                active.classList.remove(ACTIVATED);\r\n                clearDefers.delete(active);\r\n            }, CLEAR_STATE_DEFERS);\r\n            clearDefers.set(active, deferId);\r\n        }\r\n        else {\r\n            active.classList.remove(ACTIVATED);\r\n        }\r\n    };\r\n    doc.addEventListener('ionGestureCaptured', cancelActive);\r\n    doc.addEventListener('touchstart', onTouchStart, true);\r\n    doc.addEventListener('touchcancel', onTouchEnd, true);\r\n    doc.addEventListener('touchend', onTouchEnd, true);\r\n    /**\r\n     * Tap click effects such as the ripple effect should\r\n     * not happen when scrolling. For example, if a user scrolls\r\n     * the page but also happens to do a touchstart on a button\r\n     * as part of the scroll, the ripple effect should not\r\n     * be dispatched. The ripple effect should only happen\r\n     * if the button is activated and the page is not scrolling.\r\n     *\r\n     * pointercancel is dispatched on a gesture when scrolling\r\n     * starts, so this lets us avoid having to listen for\r\n     * ion-content's scroll events.\r\n     */\r\n    doc.addEventListener('pointercancel', cancelActive, true);\r\n    doc.addEventListener('mousedown', onMouseDown, true);\r\n    doc.addEventListener('mouseup', onMouseUp, true);\r\n};\r\n// TODO(FW-2832): type\r\nconst getActivatableTarget = (ev) => {\r\n    if (ev.composedPath !== undefined) {\r\n        /**\r\n         * composedPath returns EventTarget[]. However,\r\n         * objects other than Element can be targets too.\r\n         * For example, AudioContext can be a target. In this\r\n         * case, we know that the event is a UIEvent so we\r\n         * can assume that the path will contain either Element\r\n         * or ShadowRoot.\r\n         */\r\n        const path = ev.composedPath();\r\n        for (let i = 0; i < path.length - 2; i++) {\r\n            const el = path[i];\r\n            if (!(el instanceof ShadowRoot) && el.classList.contains('ion-activatable')) {\r\n                return el;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return ev.target.closest('.ion-activatable');\r\n    }\r\n};\r\nconst isInstant = (el) => {\r\n    return el.classList.contains('ion-activatable-instant');\r\n};\r\nconst getRippleEffect = (el) => {\r\n    if (el.shadowRoot) {\r\n        const ripple = el.shadowRoot.querySelector('ion-ripple-effect');\r\n        if (ripple) {\r\n            return ripple;\r\n        }\r\n    }\r\n    return el.querySelector('ion-ripple-effect');\r\n};\r\nconst ACTIVATED = 'ion-activated';\r\nconst ADD_ACTIVATED_DEFERS = 100;\r\nconst CLEAR_STATE_DEFERS = 150;\r\nconst MOUSE_WAIT = 2500;\r\n\r\nexport { startTapClick };\r\n"],"names":["startTapClick","config","undefined","d","activatableEle","activeRipple","activeDefer","lastTouch","MOUSE_WAIT","lastActivated","useRippleEffect","getBoolean","clearDefers","WeakMap","onTouchStart","ev","pointerDown","onTouchEnd","pointerUp","onMouseDown","button","t","onMouseUp","cancelActive","clearTimeout","removeActivated","setActivatedElement","getActivatableTarget","el","x","y","has","Error","classList","contains","ACTIVATED","addActivated","deferId","get","delete","remove","callback","isInstant","setTimeout","ADD_ACTIVATED_DEFERS","Date","now","add","rippleEffect","getRippleEffect","removeRipple","addRipple","then","smooth","active","time","CLEAR_STATE_DEFERS","set","addEventListener","composedPath","target","closest","path","i","length","ShadowRoot","shadowRoot","ripple","querySelector"],"sourceRoot":""}