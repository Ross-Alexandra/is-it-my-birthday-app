{"version":3,"file":"js/261.3af62318.js","mappings":";;;;AAaA,MAAMA,EAA0B,KAC5BC,SAASC,iBAAiB,cAAc,QAAU,EAEhDC,EAA0B,KAC5B,MAAMC,EAAMH,SACZ,IAAII,GAAO,EACXD,EAAIF,iBAAiB,cAAc,KAC/B,GAAIG,EACA,OAEJ,IAAIC,EAAQ,EACRC,EAAW,GACf,MAAMC,EAAK,IAAIC,YAAY,gBAAiB,CACxCC,SAAS,EACTC,OAAQ,CACJ,QAAAC,CAASC,EAAUC,GACfP,EAASQ,KAAK,CAAEF,WAAUC,UAASE,GAAIV,KAC3C,KAGRF,EAAIa,cAAcT,GAClB,MAAMU,EAAgBC,MAAOC,IACzB,IACI,GAAwB,OAApBA,QAAgD,IAApBA,OAA6B,EAASA,EAAgBN,QAAS,CAC3F,MAAMO,EAASD,EAAgBN,QAAQQ,GACzB,MAAVD,SACMA,CAEd,CACJ,CACA,MAAOE,GACHC,QAAQC,MAAMF,EAClB,GAEED,EAAkB,KACpB,GAAIf,EAASmB,OAAS,EAAG,CACrB,IAAIC,EAAkB,CAClBd,SAAUe,OAAOC,iBACjBf,QAAS,KAAe,EACxBE,IAAK,GAETT,EAASuB,SAAShB,IACVA,EAAQD,UAAYc,EAAgBd,WACpCc,EAAkBb,EACtB,IAEJT,GAAO,EACPE,EAAWA,EAASwB,QAAQjB,GAAYA,EAAQE,KAAOW,EAAgBX,KACvEE,EAAcS,GAAiBK,MAAK,IAAO3B,GAAO,GACtD,GAEJiB,GAAiB,GACnB,EAEAW,EAA+B,IAC/BC,EAA4B,E","sources":["webpack://is-it-my-birthday/./node_modules/@ionic/core/components/hardware-back-button.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\n/**\r\n * When hardwareBackButton: false in config,\r\n * we need to make sure we also block the default\r\n * webview behavior. If we don't then it will be\r\n * possible for users to navigate backward while\r\n * an overlay is still open. Additionally, it will\r\n * give the appearance that the hardwareBackButton\r\n * config is not working as the page transition\r\n * will still happen.\r\n */\r\nconst blockHardwareBackButton = () => {\r\n    document.addEventListener('backbutton', () => { }); // eslint-disable-line\r\n};\r\nconst startHardwareBackButton = () => {\r\n    const doc = document;\r\n    let busy = false;\r\n    doc.addEventListener('backbutton', () => {\r\n        if (busy) {\r\n            return;\r\n        }\r\n        let index = 0;\r\n        let handlers = [];\r\n        const ev = new CustomEvent('ionBackButton', {\r\n            bubbles: false,\r\n            detail: {\r\n                register(priority, handler) {\r\n                    handlers.push({ priority, handler, id: index++ });\r\n                },\r\n            },\r\n        });\r\n        doc.dispatchEvent(ev);\r\n        const executeAction = async (handlerRegister) => {\r\n            try {\r\n                if (handlerRegister === null || handlerRegister === void 0 ? void 0 : handlerRegister.handler) {\r\n                    const result = handlerRegister.handler(processHandlers);\r\n                    if (result != null) {\r\n                        await result;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        };\r\n        const processHandlers = () => {\r\n            if (handlers.length > 0) {\r\n                let selectedHandler = {\r\n                    priority: Number.MIN_SAFE_INTEGER,\r\n                    handler: () => undefined,\r\n                    id: -1,\r\n                };\r\n                handlers.forEach((handler) => {\r\n                    if (handler.priority >= selectedHandler.priority) {\r\n                        selectedHandler = handler;\r\n                    }\r\n                });\r\n                busy = true;\r\n                handlers = handlers.filter((handler) => handler.id !== selectedHandler.id);\r\n                executeAction(selectedHandler).then(() => (busy = false));\r\n            }\r\n        };\r\n        processHandlers();\r\n    });\r\n};\r\nconst OVERLAY_BACK_BUTTON_PRIORITY = 100;\r\nconst MENU_BACK_BUTTON_PRIORITY = 99; // 1 less than overlay priority since menu is displayed behind overlays\r\n\r\nexport { MENU_BACK_BUTTON_PRIORITY, OVERLAY_BACK_BUTTON_PRIORITY, blockHardwareBackButton, startHardwareBackButton };\r\n"],"names":["blockHardwareBackButton","document","addEventListener","startHardwareBackButton","doc","busy","index","handlers","ev","CustomEvent","bubbles","detail","register","priority","handler","push","id","dispatchEvent","executeAction","async","handlerRegister","result","processHandlers","e","console","error","length","selectedHandler","Number","MIN_SAFE_INTEGER","forEach","filter","then","OVERLAY_BACK_BUTTON_PRIORITY","MENU_BACK_BUTTON_PRIORITY"],"sourceRoot":""}